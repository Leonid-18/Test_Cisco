{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/feedback/feedback.component.ts","./src/app/components/feedback/feedback.component.html","./src/app/services/upload-file.service.ts","./src/app/components/right-response/right-response.component.ts","./src/app/components/right-response/right-response.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/tool-list/tool-list.component.html","./src/app/components/tool-list/tool-list.component.ts","./src/app/app.module.ts","./src/app/components/upload-file/upload-file.component.ts","./src/app/components/upload-file/upload-file.component.html","./src/app/services/feedback.service.ts","./src/app/services/tool.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FeedbackService } from 'src/app/services/feedback.service';\nimport { FormGroup, FormBuilder, FormControl, Validators, NgForm } from '@angular/forms'\n\n@Component({\n  selector: 'app-feedback',\n  templateUrl: './feedback.component.html',\n  styleUrls: ['./feedback.component.css']\n})\nexport class FeedbackComponent implements OnInit {\n  FormData: FormGroup;\n  constructor(private builder: FormBuilder, private contact: FeedbackService) { }\n\n  ngOnInit() {\n    this.FormData = this.builder.group({\n      tittle: new FormControl('', [Validators.required]),\n      summary: new FormControl('', [Validators.required]),\n    });\n  }\n\n\n  onSubmit(FormData) {\n    console.log(FormData)\n    this.contact.PostMessage(FormData)\n      .subscribe(response => {\n        location.href = 'http://localhost:8081/#/correct'\n        console.log(response)\n      }, error => {\n        console.warn(error.responseText)\n        console.log({ error })\n      })\n  }\n}\n","<div class=\"wrapper-box\">\n    <div class=\"container\">\n      <h2 class=\"text-center mb-5\">Feedback Form</h2>\n      <div class=\"row\">\n        <div class=\"col-md-6 offset-md-3\">\n          <form [formGroup]=\"FormData\" (ngSubmit)=\"onSubmit(FormData.value)\">\n            <div class=\"form-group\">\n                <label for=\"tittle\">Tittle</label>\n                <input\n                class=\"form-control\"\n                formControlName=\"tittle\"\n                name=\"tittle\"\n                />\n              </div>\n  \n            <div class=\"form-group\">\n              <label for=\"summary\">Summary</label>\n              <textarea\n                class=\"form-control\"\n                formControlName=\"summary\"\n                name=\"summary\"\n              >\n              </textarea>\n            </div>\n            <button\n              \n              type=\"submit\"\n              class=\"btn btn-primary\"\n              [disabled]=\"!FormData.valid\"\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UploadFileService {\n\n  private baseUrl = 'http://localhost:8081/api/tools';\n\n  constructor(private http: HttpClient) { }\n\n  upload(file: File): Observable<HttpEvent<any>> {\n    const formData: FormData = new FormData();\n\n    formData.append('file', file);\n\n    const req = new HttpRequest('POST', `${this.baseUrl}/upload`, formData, {\n      reportProgress: true,\n      responseType: 'json'\n    });\n\n    return this.http.request(req);\n  }\n\n  getFiles(): Observable<any> {\n    return this.http.get(`${this.baseUrl}/files`);\n  }\n\n  PostMessage(input: any) {\n    return this.http.post(`${this.baseUrl}/upload/file`, input, {\n      reportProgress: true,\n      responseType: 'json'\n    })\n  }\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-right-response',\n  templateUrl: './right-response.component.html',\n  styleUrls: ['./right-response.component.css']\n})\nexport class RightResponseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"text-center\">\n    <h1 class=\"display-3\">Thank You!</h1>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Test_Cisco';\n}\n","<div>\n  <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\n    <a class=\"text\"></a>\n    <div class=\"navbar-nav mr-auto\">\n    </div>\n  </nav>\n\n  <div class=\"container mt-3\">\n    <router-outlet></router-outlet>\n  </div>\n</div>","<div class=\"list row\">\n    <div class=\"intro\">\n      <h4>What is the best animal in the world?</h4>\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let tool of tools; let i = index\"\n          [class.active]=\"i == currentIndex\"\n          (click)=\"setActiveTutorial(tool, i)\"\n        >\n          {{ tool.answer }}\n        </li>\n      </ul>\n  \n    </div>\n    <div class=\"intro\">\n      <div *ngIf=\"currentTool\">\n        <h4>Tool</h4>\n        <div>\n          <label><strong>Title:</strong></label> {{ currentTool.answer }}\n        </div>\n        <div>\n          <label><strong>Description:</strong></label>\n          {{ currentTool.description }}\n        </div>\n        <form [formGroup]=\"FormData\" (ngSubmit)=\"onSubmit(FormData.value)\">\n          <div class=\"form-group\">\n            <button\n              \n              type=\"submit\"\n              class=\"btn btn-primary\"\n              [disabled]=\"!FormData.valid\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n  \n      <div *ngIf=\"!currentTool\">\n        <br />\n        <p>Please click on a Tool...</p>\n      </div>\n    </div>\n    <a routerLink=\"/feedback\"><button class=\"button\" style=\"vertical-align:middle\"><span>Feedback </span></button></a>\n    <a routerLink=\"/upload\"><button class=\"button\" style=\"vertical-align:middle\"><span>Upload Image</span></button></a>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { ToolService } from 'src/app/services/tool.service';\nimport { FormGroup, FormBuilder, FormControl, Validators, NgForm } from '@angular/forms'\n\n@Component({\n  selector: 'app-tool-list',\n  templateUrl: './tool-list.component.html',\n  styleUrls: ['./tool-list.component.css']\n})\nexport class ToolListComponent implements OnInit {\n\n  tools: any;\n  currentTool = null;\n  currentIndex = -1;\n  title = '';\n  FormData: FormGroup;\n\n  constructor(private toolService: ToolService, private builder: FormBuilder) { }\n\n  ngOnInit() {\n    this.retrieveTutorials();\n    this.FormData = this.builder.group({});\n  }\n\n  retrieveTutorials() {\n    this.toolService.getAll()\n      .subscribe(\n        data => {\n          this.tools = data;\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refreshList() {\n    this.retrieveTutorials();\n    this.currentTool = null;\n    this.currentIndex = -1;\n  }\n\n  setActiveTutorial(tool:any, index:any) {\n    this.currentTool = tool;\n    this.currentIndex = index;\n    this.FormData = this.builder.group({\n      id: tool._id,\n      answer: tool.answer,\n      description: tool.description\n    });\n  }\n\n  onSubmit(FormData) {\n    console.log(FormData)\n    this.toolService.PostMessage(FormData)\n      .subscribe(response => {\n        location.href = 'http://localhost:8081/#/correct'\n        console.log(response)\n      }, error => {\n        console.warn(error.responseText)\n        console.log({ error })\n      })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ToolListComponent } from './components/tool-list/tool-list.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RightResponseComponent } from './components/right-response/right-response.component';\nimport { FeedbackComponent } from './components/feedback/feedback.component';\nimport { UploadFileComponent } from './components/upload-file/upload-file.component';\nimport { FeedbackService } from './services/feedback.service'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ToolListComponent,\n    RightResponseComponent,\n    FeedbackComponent,\n    UploadFileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UploadFileService } from 'src/app/services/upload-file.service';\nimport { HttpEventType, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FormGroup, FormBuilder, FormControl, Validators, NgForm } from '@angular/forms'\n\n@Component({\n  selector: 'app-upload-file',\n  templateUrl: './upload-file.component.html',\n  styleUrls: ['./upload-file.component.css']\n})\nexport class UploadFileComponent implements OnInit {\n  FormData: FormGroup;\n  selectedFiles: FileList;\n  currentFile: File;\n  progress = 0;\n  message = '';\n  files = [];\n\n  fileInfos: Observable<any> | undefined;\n\n  constructor(private uploadService: UploadFileService, private builder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.fileInfos = this.uploadService.getFiles();\n    this.FormData = this.builder.group({\n      tittle: new FormControl('', [Validators.required]),})\n  }\n\n  selectFile(event: any): void {\n    this.selectedFiles = event.target.files;\n  }\n\n  upload(): void {\n    this.progress = 0;\n  \n    this.currentFile = this.selectedFiles.item(0);\n    this.uploadService.upload(this.currentFile).subscribe(\n      event => {\n        if (event.type === HttpEventType.UploadProgress) {\n          this.progress = Math.round(100 * event.loaded / event.total);\n        } else if (event instanceof HttpResponse) {\n          this.files.push(this.currentFile.name)\n          console.log(this.files)\n          this.message = event.body.message;\n          this.fileInfos = this.uploadService.getFiles();\n          this.FormData = this.builder.group({\n            tittle: new FormControl('', [Validators.required]),\n            file: [this.files]\n          });\n        }\n      },\n      err => {\n        this.progress = 0;\n        this.message = 'Could not upload the file!';\n        this.currentFile = undefined;\n      });\n    this.selectedFiles = undefined;\n  }\n\n  onSubmit(FormData) {\n    console.log(this.files)\n    console.log(FormData)\n    this.uploadService.PostMessage(FormData)\n      .subscribe(response => {\n        location.href = 'http://localhost:8081/#/correct'\n        console.log(response)\n      }, error => {\n        console.warn(error.responseText)\n        console.log({ error })\n      })\n  }\n}","<div *ngIf=\"currentFile\" class=\"progress\">\n    <div\n      class=\"progress-bar progress-bar-info progress-bar-striped\"\n      role=\"progressbar\"\n      attr.aria-valuenow=\"{{ progress }}\"\n      aria-valuemin=\"0\"\n      aria-valuemax=\"100\"\n      [ngStyle]=\"{ width: progress + '%' }\"\n    >\n      {{ progress }}%\n    </div>\n  </div>\n  \n  <label class=\"btn btn-default\">\n    <input type=\"file\" (change)=\"selectFile($event)\" />\n  </label>\n  \n  <button class=\"btn btn-primary\" [disabled]=\"!selectedFiles\" (click)=\"upload()\">\n    Upload\n  </button>\n  \n  <div class=\"alert alert-light\" role=\"alert\">{{ message }}</div>\n  \n  <div class=\"card\">\n    <div class=\"card-header\">List of Files</div>\n    <ul\n      class=\"list-group list-group-flush\"\n      *ngFor=\"let file of fileInfos | async\"\n    >\n      <li class=\"list-group-item\">\n        <a href=\"{{ file.url }}\">{{ file.name }}</a>\n      </li>\n    </ul>\n  </div>\n  <div><form [formGroup]=\"FormData\" (ngSubmit)=\"onSubmit(FormData.value)\">\n    <div class=\"form-group\">\n        <label for=\"tittle\">Tittle</label>\n        <input\n        class=\"form-control\"\n        formControlName=\"tittle\"\n        name=\"tittle\"\n        />\n      </div>\n    <button\n              \n              type=\"submit\"\n              class=\"btn btn-primary\"\n              [disabled]=\"!FormData.valid\"\n            >\n              Submit\n            </button>\n        </form></div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  private base = 'http://localhost:8081/api/tools/feedback'\n\n  constructor(private http: HttpClient) { }\n\n  PostMessage(input: any) {\n    const myHeaders = new HttpHeaders().set('Access-Control-Allow-Origin', '*').set('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE')\n    .set('Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers,X-Access-Token,XKey,Authorization');\n    return this.http.post(this.base, input, {\n      headers: myHeaders,\n      reportProgress: true,\n      responseType: 'json'\n    })\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nconst baseUrl = 'http://localhost:8081/api/tools';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToolService {\n  \n  private base = 'http://localhost:8081/api/tools/save'\n  constructor(private http: HttpClient) { }\n  getAll() {\n    return this.http.get(baseUrl);\n  }\n\n  PostMessage(input: any) {\n    return this.http.post(this.base, input, {\n      reportProgress: true,\n      responseType: 'json'\n    })\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ToolListComponent } from './components/tool-list/tool-list.component';\nimport { RightResponseComponent } from './components/right-response/right-response.component'\nimport {FeedbackComponent} from './components/feedback/feedback.component'\nimport {UploadFileComponent} from './components/upload-file/upload-file.component'\n\nconst routes: Routes = [{ path: '', redirectTo: 'tools', pathMatch: 'full' },\n{path: 'tools', component: ToolListComponent},\n{path: 'correct', component: RightResponseComponent},\n{path: 'feedback', component: FeedbackComponent},\n{path: 'upload', component: UploadFileComponent},];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}